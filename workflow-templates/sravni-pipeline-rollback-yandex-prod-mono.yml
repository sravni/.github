name: Prod-Rollback

#Ручной запуск
on:
  workflow_dispatch:
    inputs:
      namespace:
        description: Namespace name
        default: default
        required: true

#Переменные окружения !!!!!!!!ВАЖНО!!!!!!!!! необходимо прописать свою команду
env:
  team: <team_name>

#Описание Джобов воркфлоу
jobs:
#Описание джобы service-info
  service-info:
    #runs-on указывает какой раннер будет использоваться для запуска данной Джобы
    #ubuntu-latest - офф раннер гитхаба на основе дистрибутива ubuntu
    #раннеры на основе других дистрибутивов можно найти в следующей доке:
    #https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners#supported-runners-and-hardware-resources
    runs-on: ubuntu-latest

    outputs:
      service_name: ${{ env.service_name }}

    steps:
      #checkout - собственно чекаут репозитория
      - name: Checkout source
        uses: actions/checkout@v2

      #Шаг получения необходимых переменных для работы пайплайна
      #service_name - получается из имени репозитория, например osago-frontend
      - name: Set build vars to GITHUB_ENV
        run: |
          service_name=$(basename `git rev-parse --show-toplevel`)
          echo "service_name=$service_name" >> $GITHUB_ENV

  rollback:
    runs-on: sravni_prod
    needs: [ service-info ]

    env:
      service_name: ${{ needs.service-info.outputs.service_name }}

    steps:
      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          version: 3.8.2

      - name: Install Yandex cli
        run:  |
          wget -P tmp/ https://storage.yandexcloud.net/yandexcloud-yc/release/0.85.0/linux/amd64/yc
          chmod +x tmp/yc
          mkdir -p /home/runner/.local/bin
          mv tmp/yc /home/runner/.local/bin/yc
          echo ${{ secrets.YANDEX_PROD_KEY }} | base64 --decode > tmp/key.json
          yc config profile create github
          yc config set service-account-key tmp/key.json
          yc managed-kubernetes \
            cluster get-credentials \
            --cloud-id ${{ secrets.YANDEX_PROD_CLOUD_ID }} \
            --folder-id ${{ secrets.YANDEX_PROD_FOLDER_ID }} \
            sravni-prod-k8s-workloads --internal

      #Шаг отката
      - name: Rollback
        run: |
          echo "Rollback service ${{ env.service_name }}..."
          helm rollback \
            "${{ env.service_name }}" \
            --namespace "${{ inputs.namespace }}" \
            --force \
            --wait \
            --timeout 10m
          if [ $? != 0 ]; then
            echo "Rollback failed, see logs" && exit 1
          fi
          echo "Done"
