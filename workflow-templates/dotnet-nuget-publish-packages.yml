name: Build and Publish Package
env:
  VersionSuffix: ""
  DOTNET_NOLOGO: true
  VersionPrefix: 1.0.0
  Version: 1.0.0
on:
  push:
    branches:
    - master
    tags:
      - v[0-9]+.[0-9]+*
  pull_request:
jobs:
  Build_and_publish:
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        package_name:
        - ""
    steps:
    - name: Checkout source
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '3.1.x'
        source-url: https://nuget.pkg.github.com/sravni/index.json
      env:
        NUGET_AUTH_TOKEN: ${{secrets.GH_TOKEN}}

    - name: Setup cache
      uses: actions/cache@v2
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ matrix.package_name }}-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget-${{ matrix.package_name }}

    - name: Format version
      if: startsWith(github.ref, 'refs/tags')
      run: |
        tag=${GITHUB_REF#refs/tags/v}
        echo "::set-env name=Version::$tag"
        echo "::set-env name=VersionPrefix::$(echo $tag | cut -d- -f1)"
        echo "::set-env name=VersionSuffix::$(echo $GITHUB_REF | cut -d- -f2- -s)"

    - name: Build
      run: dotnet build -c Release /p:VersionPrefix=$VersionPrefix /p:VersionSuffix=$VersionSuffix /p:PackageVersion=$Version --nologo

    - name: Test
      run: dotnet test -c Release -f netcoreapp3.1 --no-build

    - name: Publish
      if: startsWith(github.ref, 'refs/tags')
      env: 
        DOTNET_SYSTEM_NET_HTTP_USESOCKETSHTTPHANDLER: "0"
      run: dotnet nuget push ./${{ matrix.package_name }}/bin/Release/${{ matrix.package_name }}.*.nupkg
