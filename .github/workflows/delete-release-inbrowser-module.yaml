name: Build and Release InBrowser module

on:
    workflow_call:
        inputs:
            runner:
                description: "Указывает какой раннер будет использоваться для запуска флоу"
                default: "sravni_dev"
                required: false
                type: string
            enviroment_file_name:
                description: "Имя файла {environment}.yaml в директории enviroment проекта получения переменных окружения на момент сборки проекта"
                required: true
                type: string
            project_folder:
                description: "Название папки в корне репозитория с проектом"
                required: true
                type: string           

        secrets:           
            GH_TOKEN:
                required: true
            S3_CDN_PUBLIC_PATH:
                required: true

jobs:
    get_branch_name:
      name: Set branch name
      runs-on: sravni_dev
      outputs:
        branch: ${{ steps.branch_dispatch.outputs.branch || steps.branch_delete.outputs.branch || steps.branch_pr.outputs.branch }}
      steps:
        - name: Set branch (dispatch)
          id: branch_dispatch
          if: ${{ github.event_name == 'workflow_dispatch' }}
          run: B="${{ github.event.inputs.branch_name }}" && echo "branch=${B,,}" >> $GITHUB_OUTPUT
        - name: Set branch (delete)
          id: branch_delete
          if: ${{ github.event_name == 'delete' }}
          run: B="${{ github.event.ref }}" && echo "branch=${B#refs/heads/}" | tr '[:upper:]' '[:lower:]' >> $GITHUB_OUTPUT
        - name: Set branch (pull_request)
          id: branch_pr
          if: ${{ github.event_name == 'pull_request' }}
          run: B="${{ github.event.pull_request.head.ref }}" && echo "branch=${B,,}" >> $GITHUB_OUTPUT
    
    delete_release:
        runs-on: ${{ inputs.runner }}
        needs: [get_branch_name]
        steps:
            - uses: actions/checkout@v4

            - name: Install yq
              run: |
                sudo wget -O /usr/local/bin/yq https://github.com/mikefarah/yq/releases/download/v4.30.3/yq_linux_amd64
                sudo chmod +x /usr/local/bin/yq     

            - name: Install envsubst
              run: |
                sudo apt-get update -y
                sudo apt-get install -y gettext

            - uses: actions/setup-node@v4
              with:
                node-version: '16.x'
                registry-url: https://npm.pkg.github.com/
                scope: '@sravni'

            - name: Install yarn
              run: npm install -g yarn

            - name: Get Yarn cache path
              id: yarn-cache
              run: echo "::set-output name=dir::$(yarn cache dir)"

            - name: Load Yarn cache
              uses: actions/cache@v3
              with:
                path: ${{ steps.yarn-cache.outputs.dir }}
                key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
                restore-keys: |
                    ${{ runner.os }}-yarn-

            - name: Create build enviroment values
              env:
                BRANCH: ${{ needs.get_branch_name.outputs.branch }}
                S3_PUBLIC_PATH: ${{ secrets.S3_CDN_PUBLIC_PATH }}
              run: |
                values=$(while IFS=$'\t' read -r name value _; do
                    echo "$name=$value" | envsubst
                done < <(yq -oy e '.env[] | [.name, .value] | @tsv' ./${{ inputs.project_folder }}/enviroments/${{ inputs.enviroment_file_name }}))

                echo "$values" >> $GITHUB_ENV
                
            - name: Install dependencies
              env:
                NODE_AUTH_TOKEN: ${{ secrets.GH_TOKEN }}
              run: yarn install --frozen-lockfile           

            - name: Delete single-spa module
              run: yarn --cwd ./${{ inputs.project_folder }} delete:singleSpaProject


