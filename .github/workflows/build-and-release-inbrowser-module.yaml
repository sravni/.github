name: Build and Release InBrowser module

on:
    workflow_call:
        inputs:
            enviroment_file_name:
                description: "Имя файла {environment}.yaml в директории enviroment проекта получения переменных окружения на момент сборки проекта"
                required: true
                type: string
            project_folder:
                description: "Название папки в корне репозитория с проектом"
                required: true
                type: string
            branch:
                description: "Название ветки проекта, которую нужно релизнуть"
                required: false
                type: string
            runner:
                description: "Указывает какой раннер будет использоваться для запуска флоу"
                default: "sravni_dev"
                required: false
                type: string
            shared_folder:
                description: "Название папки в корне репозитория с общим кодом"
                required: false
                type: string

        secrets:
            SENTRY_SOURCEMAP_WEB_FRONTEND_AUTH_TOKEN:
                required: false
            GH_TOKEN:
                required: true             
            S3_CDN_ENDPOINT:
                required: true
            S3_CDN_BUCKET:
                required: true
            S3_CDN_PUBLIC_PATH:
                required: true
            S3_CDN_ACCESS_KEY_ID:
                required: true
            S3_CDN_SECRET_ACCESS_KEY_ID:
                required: true

jobs: 
    build_and_release:
        runs-on: ${{ inputs.runner }}        
        steps:
          - uses: actions/checkout@v4

          - uses: actions/setup-node@v4
            with:
              node-version: '18.x'
              registry-url: https://npm.pkg.github.com/
              scope: '@sravni'

          - name: Install yq
            run: |
              sudo wget -O /usr/local/bin/yq https://github.com/mikefarah/yq/releases/download/v4.30.3/yq_linux_amd64
              sudo chmod +x /usr/local/bin/yq     

          - name: Install envsubst
            run: |
              sudo apt-get update -y
              sudo apt-get install -y gettext

          - name: Install yarn
            run: npm install -g yarn

          # - name: Get Yarn cache path
          #   id: yarn-cache
          #   run: echo "::set-output name=dir::$(yarn cache dir)"

          # - name: Load Yarn cache
          #   uses: actions/cache@v3
          #   with:
          #     path: ${{ steps.yarn-cache.outputs.dir }}
          #     key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          #     restore-keys: |
          #         ${{ runner.os }}-yarn-

          - name: Create build enviroment values
            env:
              BRANCH: ${{ inputs.branch }}
              SENTRY_SOURCEMAP_WEB_FRONTEND_AUTH_TOKEN: ${{ secrets.SENTRY_SOURCEMAP_WEB_FRONTEND_AUTH_TOKEN }}
              S3_CDN_ENDPOINT: ${{ secrets.S3_CDN_ENDPOINT }}
              S3_CDN_BUCKET: ${{ secrets.S3_CDN_BUCKET }}
              S3_CDN_PUBLIC_PATH: ${{ secrets.S3_CDN_PUBLIC_PATH }}
              S3_CDN_ACCESS_KEY_ID: ${{ secrets.S3_CDN_ACCESS_KEY_ID }}
              S3_CDN_SECRET_ACCESS_KEY_ID: ${{ secrets.S3_CDN_SECRET_ACCESS_KEY_ID }}
            run: |
              values=$(while IFS=$'\t' read -r name value _; do
                  echo "$name=$value" | envsubst
              done < <(yq -oy e '.env[] | [.name, .value] | @tsv' ./${{ inputs.project_folder }}/enviroments/${{ inputs.enviroment_file_name }}))

              echo "$values" >> $GITHUB_ENV
              
          - name: Install dependencies Shared
            if: inputs.shared_folder != ''
            env:
              NODE_AUTH_TOKEN: ${{ secrets.GH_TOKEN }}
            run: yarn --cwd ./${{ inputs.shared_folder }} install --frozen-lockfile

          - name: Install dependencies Project
            env:
              NODE_AUTH_TOKEN: ${{ secrets.GH_TOKEN }}
            run: |
              yarn --cwd ./${{ inputs.project_folder }} install --frozen-lockfile --verbose

          - name: Build Shared
            if: inputs.shared_folder != ''
            run: yarn --cwd ./${{ inputs.shared_folder }} build

          - name: Build Project
            run: |              
              yarn --cwd ./${{ inputs.project_folder }} build --verbose
