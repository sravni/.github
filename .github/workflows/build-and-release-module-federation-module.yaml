name: Build and Release Module Federation module

on:
    workflow_call:
        inputs:
            enviroment_file_name:
                description: "Имя файла {environment}.yaml в директории enviroment проекта получения переменных окружения на момент сборки проекта"
                required: true
                type: string
            branch:
                description: "Название ветки проекта, которую нужно релизнуть"
                required: false
                type: string
            runner:
                description: "Указывает какой раннер будет использоваться для запуска флоу"
                default: "sravni_infra"
                required: false
                type: string
            is_stage:
                description: "Запускается ли план для публикации на стейдж"
                required: false
                default: false
                type: boolean
            team:
                description: "Название команды"
                required: false
                type: string

        secrets:
            SENTRY_SOURCEMAP_WEB_FRONTEND_AUTH_TOKEN:
                required: false
            NGENIX_API_ENDPOINT:
              required: true
            NGENIX_API_LOGIN:
              required: true
            NGENIX_API_PASSWORD:
              required: true
            S3_CDN_ENDPOINT:
                required: true
            S3_CDN_BUCKET:
                required: true
            S3_CDN_PUBLIC_PATH:
                required: true
            S3_CDN_PUBLIC_ID:
                required: true
            S3_CDN_ACCESS_KEY_ID:
                required: true
            S3_CDN_SECRET_ACCESS_KEY_ID:
                required: true

jobs:
    build_and_release:
        runs-on: ${{ inputs.runner }}
        steps:
          - uses: actions/checkout@v4
          - name: Setup Node.js
            uses: actions/setup-node@v4
            with:
              # Для обновления до 22 ноды и выше нужно в репозиториях перейти с node-sass на sass пакет
              node-version: '20.x'

          - name: Install yarn
            run: npm install -g yarn

          - name: Install registry
            run: |
              npm config set registry https://artifactory.yc.prod.infra.sravni.market/artifactory/api/npm/sravni_npm_group/
              yarn config set registry https://artifactory.yc.prod.infra.sravni.market/artifactory/api/npm/sravni_npm_group/

          - name: Get Yarn cache path
            id: yarn-cache
            run: echo "::set-output name=dir::$(yarn cache dir)"

          - name: Load Yarn cache
            uses: actions/cache@v2
            with:
              path: ${{ steps.yarn-cache.outputs.dir }}
              key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
              restore-keys: |
                ${{ runner.os }}-yarn-

          - name: Install yq
            uses: chrisdickinson/setup-yq@latest
            with:
              yq-version: 'v4.30.3'

          - name: Install dependencies Project
            run: |
              yarn install --frozen-lockfile

          - name: Replace variables in yaml file
            env:
              BRANCH: ${{ inputs.branch }}
              SENTRY_SOURCEMAP_WEB_FRONTEND_AUTH_TOKEN: ${{ secrets.SENTRY_SOURCEMAP_WEB_FRONTEND_AUTH_TOKEN }}
              NGENIX_API_ENDPOINT: ${{ secrets.NGENIX_API_ENDPOINT }}
              NGENIX_API_LOGIN: ${{ secrets.NGENIX_API_LOGIN }}
              NGENIX_API_PASSWORD: ${{ secrets.NGENIX_API_PASSWORD }}

              S3_CDN_ENDPOINT: ${{ secrets.S3_CDN_ENDPOINT }}
              S3_CDN_BUCKET: ${{ secrets.S3_CDN_BUCKET }}
              S3_CDN_PUBLIC_PATH: ${{ secrets.S3_CDN_PUBLIC_PATH }}
              S3_CDN_PUBLIC_ID: ${{ secrets.S3_CDN_PUBLIC_ID }}
              S3_CDN_ACCESS_KEY_ID: ${{ secrets.S3_CDN_ACCESS_KEY_ID }}
              S3_CDN_SECRET_ACCESS_KEY_ID: ${{ secrets.S3_CDN_SECRET_ACCESS_KEY_ID }}
            run: |
              set -e
              FILENAME="./enviroments/${{ inputs.enviroment_file_name }}"

              if [ -z $FILENAME ]; then
                echo 'The path to the file is required'
                exit 1
              fi

              while IFS='=' read -r -a var; do
                echo "Setting ${var[0]} to ${var[1]} "
                echo ${var[1]} | wc -l
                sed -i "s|$(printf '%s\n' "\${${var[0]}}" | sed -e 's/[]\/$*.^[]/\\&/g')|${var[1]}|g" $FILENAME
              done < <(printenv)
            shell: bash

          - name: Read build enviroment values from yaml
            uses: dcarbone/yaml-to-env-action@v1.0.0
            with:
              yaml-file: './enviroments/${{ inputs.enviroment_file_name }}'

          - name: Build Project
            run: yarn build

          - name: Publish Static
            run: yarn publish:static
