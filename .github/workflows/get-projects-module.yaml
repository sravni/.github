name: Get projects

on:
  workflow_call:
    inputs:
      project_path_mask:
        description: 'Маска пути для поиска проектов'
        required: true
        type: string
        default: '*'
      image_version:
        description: "Версия образа"
        required: false
        type: string
      k8s_yaml_file_name:
        description: "Имя файла {environment}.yaml в директории .k8s проекта для валидации его наличия и передачи следующим джобам"
        required: true
        type: string
      is_stage:
        description: "Запускается ли план для публикации на стейдж"
        required: false
        type: boolean
        default: false

    outputs:
      projects:
        description: 'JSON-массив с объектами с информацией о найденных проектах'
        value: ${{ jobs.get_projects.outputs.projects }}

jobs:
  
  get_projects:
    runs-on: ubuntu-latest

    outputs:
      projects: ${{ steps.get_projects.outputs.projects }}
    
    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Get build number and image version
        run: |
          if [ -z "${{ inputs.image_version }}" ]
          then
            build_number=$(echo ${GITHUB_SHA} | cut -c1-7)
            if [ "${{ inputs.is_stage }}" = "true" ]
              then build_number="$build_number-qa"
            fi
            image_version="${build_number}"
          else
            image_version="${{ inputs.image_version }}"
          fi
          echo "BUILD_NUMBER=$build_number" >> $GITHUB_ENV
          echo "IMAGE_VERSION=$image_version" >> $GITHUB_ENV

      - name: Get projects
        id: get_projects
        run: |
          projects=$(for p in $(find * -maxdepth 3 -path "${{ inputs.project_path_mask }}/Dockerfile")
            do  
              project_path=$(echo $p | sed -E 's|(.*)/Dockerfile$|\1|')
              if ! test -f "$project_path/.k8s/${{ inputs.k8s_yaml_file_name }}"
              then 
                echo ""
              else
                project_name=$(echo $p | sed -E 's|(.*/\|)(.*)/Dockerfile$|\2|' | tr '[:upper:]' '[:lower:]' | sed 's|\.|-|g')
                image_name="${project_name}:${{ env.IMAGE_VERSION }}"
                echo "{ \"project_name\":\"$project_name\", \
                        \"dockerfile\":\"$p\", \
                        \"project_path\":\"$project_path\", \
                        \"k8s_yaml_path\":\"$project_path/.k8s/${{ inputs.k8s_yaml_file_name }}\", \
                        \"build_number\":\"${{ env.BUILD_NUMBER }}\", \
                        \"image_name\":\"$image_name\", \
                        \"image_version\":\"${{ env.IMAGE_VERSION }}\" }"
              fi
            done | jq -src '.')
          echo Найдены следующие проекты:
          echo $projects | jq -r '.[] | .project_name'
          echo "name=project::${projects}"
          echo "projects=${projects}" >> $GITHUB_OUTPUT
