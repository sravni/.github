name: Publish to dev  projects base module

on:
  workflow_call:
    inputs:
      team:
        description: 'team'
        required: true 
        type: string
      projects:
        description: "JSON объект со списком проектов для публикации"
        required: true
        type: string
      runner:
        description: "Указывает какой раннер будет использоваться для запуска флоу"
        required: false
        default: sravni_dev
        type: string
    secrets: 
      TEST_CI_PAT_FOR_ACTIONS:
        required: true

env:
  TEAM: ${{ inputs.team }}

jobs:
  get_branch_name:
    uses: sravni/.github/.github/workflows/sravni-pipeline-get-branch-name-module.yml@master

  publish:
    runs-on: ${{ inputs.runner }}
    needs: [ get_branch_name ]

    env:
      BRANCH: ${{ needs.get_branch_name.outputs.branch_name }}
      REPO_PATH: './deploy/${{ env.TEAM }}'
      YQ_VERSION: '4.30.3'

    strategy:
      matrix:
        project: ${{ fromJson(inputs.projects) }}

    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Checkout deploy repo
        uses: actions/checkout@v3
        with:
          repository: sravni/deploy
          token: ${{ secrets.TEST_CI_PAT_FOR_ACTIONS }}
          path: deploy
          ref: main

      - name: Install yq
        run: |
          sudo wget -O /usr/local/bin/yq https://github.com/mikefarah/yq/releases/download/v${{ env.YQ_VERSION }}/yq_linux_amd64
          sudo chmod +x /usr/local/bin/yq

      - name: Clone values from origin repo
        run: |
          cat ${{ matrix.project.k8s_yaml_path }} > ${{ env.REPO_PATH }}/${{ matrix.project.project_name }}/values_dev.yaml

      # Для деплоев из веток отличных от master, нужно убедиться, что в репе sravni/deploy в файле /deploy/{team}/_apps/values_dev.yaml
      # есть запись вида:
      # services:
      #   …
      #   - name: education-frontend
      #   …
      #   - name: education-frontend-edu-103
      #     values_file: values_edu-103.yaml
      #     nameOrigin: education-frontend
      - name: Create app and set values
        if: ${{ env.BRANCH != "master" }}
        run: >
          if [ ! -f "${{ env.REPO_PATH }}/${{ matrix.project.project_name }}/values_${{ env.BRANCH }}.yaml" ]; 
          then grep -q ${{ env.BRANCH }} ${{ env.REPO_PATH }}/_apps/values_dev.yaml 
          || yq e  -i '.services += {"name": "${{ matrix.project.project_name }}-${{ env.BRANCH }}", "values_file": "values_${{ env.BRANCH }}.yaml", 
          "nameOrigin": "${{ matrix.project.project_name }}"}' ${{ env.REPO_PATH }}/_apps/values_dev.yaml 
          ; yq e '.global.image.tag = "${{ matrix.project.image_version }}" | .ingresses[0].host |= sub ("(^)", "${{ env.BRANCH }}.${1}") |
          .global.image.repository = "sravni.azurecr.io/${{ matrix.project.project_name }}" |
          .global.imagePullSecrets[0] = "sravni-azurecr-io"'
          ${{ env.REPO_PATH }}/${{ matrix.project.project_name }}/values_dev.yaml > ${{ env.REPO_PATH }}/${{ matrix.project.project_name }}/values_${{ env.BRANCH }}.yaml
          ; fi

      # Для master'а устанавливаем tag образа и убеждаемся, что установлены `global.image.repository` и `global.imagePullSecrets`
      - name: Modify values
        if: ${{ env.BRANCH == "master" }}
        run: >
          yq -i '.global.image.tag = "${{ matrix.project.image_version }}" |
          .global.image.repository = "sravni.azurecr.io/${{ matrix.project.project_name }}" |
          .global.imagePullSecrets[0] = "sravni-azurecr-io"'
          ${{ env.REPO_PATH }}/${{ matrix.project.project_name }}/values_dev.yaml
          
      - name: Commit and push
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          repository: ./deploy
          branch: main
          commit_user_name: sravnidevops
          commit_user_email: company-service@sravni.ru
          commit_message: "${{ matrix.project.project_name }} new version: ${{ matrix.project.image_version }}"
